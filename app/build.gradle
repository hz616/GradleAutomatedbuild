apply plugin: 'com.android.application'
apply plugin: "pluginSrc"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.gradledemo"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

releaseInfo{
    versionCode = "1"
    versionName = "1.0.0"
    versionInfo="第一个版本"
    fileName = "release.xml"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

this.getParentProject()

def getParentProject() {
    def parent = this.getParent()
    println "my parent project is  $parent"
}

task taskOne
taskOne {

    //定义扩展属性
    ext.good = true

    println "hello ---"

    doFirst {
        println "start ---"
    }

    doLast {
        println "end ---"

    }
}
task taskAndroid(dependsOn: "taskOne") {

    doFirst{
        println "task one ext good is $taskOne.good"
    }

    doLast {
        println "task android end"
    }
}

defaultTasks("taskAndroid")


task myTask{
    println "this is my task"

    doFirst {
        println "the group is 2"
    }

    doLast{
        println "the group is 3"
    }
}

myTask.doFirst{
    println "the group is 1"
}

def startBuildTime,endBuildTime

this.project.afterEvaluate {
    project ->
        def preBuildTask = project.tasks.getByName("preBuild")
        preBuildTask.doFirst {
            startBuildTime = System.currentTimeMillis()
        }

        def buildTask = project.tasks.getByName("build")
        buildTask.doLast {
            endBuildTime = System.currentTimeMillis()
            println "current project execute time is ${endBuildTime- startBuildTime}"
        }
}





